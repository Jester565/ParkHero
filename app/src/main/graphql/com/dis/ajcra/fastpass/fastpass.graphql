fragment DisPass on Pass {
    id
    name
    type
    expirationDT
}

fragment DisFastPass on FastPass {
    redeemable
    official
    startDT
    pass {
        ...DisPass
    }
}

fragment DisUserFastPasses on UserFastPasses {
    user
    passes {
        ...DisFastPass
    }
}

fragment DisFastPassTransaction on FastPassTransaction {
    id
    rideID
    fpDT
    creationDT
    authorID
    userPasses {
        ...DisUserFastPasses
    }
}

fragment DisRideTime on RideTime {
    status
    waitRating
    changedTime
    changedRange
    waitTime
    fastPassTime
    dateTime
}

fragment DisRide on Ride {
    id
    time {
        ...DisRideTime
    }
    info {
        name
        picUrl
        land
        height
        ages
        thrills
        photos {
            url
            maxSize
            numSizes
        }
    }
}

fragment DisRideDP on RideDP {
    waitTime
    fastPassTime
    dateTime
}

fragment DisNotify on NotifyConfig {
    waitRating
    waitTime
    fastPassTime
    distance
    inLineTime
}

fragment DisRideFilter on RideFilter {
    filterID
    rideIDs
    notifyConfig {
        ...DisNotify
    }
}

query GetRides {
    getRides {
        ...DisRide
    }
}

query ListRideFilters {
    getRideFilters {
        ...DisRideFilter
    }
}

mutation AddRideFilter($filterID: String, $rideIDs: [String], $notifyConfig: NotifyInput) {
    updateRideFilter(rideFilter: {
        filterID: $filterID
        rideIDs: $rideIDs
        notifyConfig: $notifyConfig
    }) {
        filterID
        rideIDs
        notifyConfig {
            waitRating
            waitTime
            fastPassTime
            distance
            inLineTime
        }
    }
}

mutation DeleteRideFilters($filterIDs: [String]) {
    deleteRideFilters(filterIDs: $filterIDs)
}

mutation AddPass($passID:String) {
    addPass(passID:$passID) {
        ...DisPass
    }
}

mutation RemovePass($passID: String) {
    removePass(passID:$passID)
}

mutation AddFastPass($rideID:String, $targetPasses:[String]) {
    addFastPass(rideID:$rideID, targetPasses:$targetPasses) {
        ...DisFastPassTransaction
    }
}

query ListFastPasses {
    listFastPasses {
        ...DisFastPassTransaction
    }
}

query ListPasses {
    listPasses {
        user
        passes {
            ...DisPass
        }
    }
}

mutation UpdateRides {
   updateRides {
        rides {
            ...DisRide
        }
   }
}

mutation UpdateFastPasses {
    updateFastPasses {
        fps {
            ...DisFastPassTransaction
        }
    }
}

subscription RidesUpdated {
   ridesUpdated {
       rides {
           ...DisRide
       }
   }
}

query GetRideDPs($rideID:String) {
    getRideDPs(rideID:$rideID) {
        rideTimes {
            ...DisRideDP
        }
        predictTimes {
            ...DisRideDP
        }
    }
}

query GetSchedules {
    getSchedules {
        schedules {
            parkName
            parkIconUrl
            openTime
            closeTime
            magicStartTime
            magicEndTime
            crowdLevel
            resortName
            blockLevel
            date
        }
    }
}

query GetHourlyWeather($date:String) {
    getHourlyWeather(date:$date) {
        weather {
            dateTime
            feelsLikeF
            rainStatus
        }
    }
}